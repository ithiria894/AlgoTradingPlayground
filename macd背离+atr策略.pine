//@version=4
study(title="MACD HIST 背离", shorttitle="MACDhistdiv+ATR", overlay=true)

//Getting inputs
sma_source = input(title="Simple MA(Oscillator)", type=input.bool, defval=false)
sma_signal = input(title="Simple MA(Signal Line)", type=input.bool, defval=false)
src = input(title="Source hist", type=input.source, defval=ohlc4)
fast_length = input(title="Fast Length", type=input.integer, defval=12)
slow_length = input(title="Slow Length", type=input.integer, defval=26)
signal_length = input(title="Signal Smoothing", type=input.integer, minval=1, maxval=50, defval=9)


//Calculating
sma_1 = sma(src, fast_length)
ema_1 = ema(src, fast_length)
fast_ma = sma_source ? sma_1 : ema_1
sma_2 = sma(src, slow_length)
ema_2 = ema(src, slow_length)
slow_ma = sma_source ? sma_2 : ema_2
macd = fast_ma - slow_ma
sma_3 = sma(macd, signal_length)
ema_3 = ema(macd, signal_length)
signal = sma_signal ? sma_3 : ema_3
hist = macd - signal

ema200=ema(src,200)
RSI=rsi(src,14)


//Const
range = 100
divlongREG = 0
divshortREG = 0
positionX = 0
positionY = 0
A = 0 
lowX = low
highX = high
histX = hist
float lowY = na
float highY = na
float histY = na

color COLOR = RSI<30 and close>ema200 ? color.green : RSI>70 and close<ema200 ? color.red : na

//Magic    
if (hist[2]>hist[1] and hist[1]<hist and hist[1]<0)
    for i = 1 to range by 1
        if hist[i]<0 and hist[i+1]>0
            if (A==0)
                A:=i
			for j = 1 to 3 by 1
				if low[j]<lowX
					lowX:=low[j]
					positionX:=j
				if hist[j]<histX
					histX:=hist[j]
            break
			
    for i = 4 to A+1 by 1
        if hist[i+2] > hist[i+1] and hist[i+1] < hist[i] and hist[i]<histX
			lowY:=low[i]
			histY:=hist[i]
			positionY:=i
			for j=i to i+3 by 1
				if hist[j]<histY
					histY:=hist[j]
				if low[j]<lowY
					lowY:=low[j]
					positionY:=j

	
			if lowX<lowY and histX>histY
				divlongREG:=1
			break
            
//    if divlongREG == 1
//        l = line.new(bar_index[positionX], low[positionX], bar_index[positionY], low[positionY], color=color.teal, width = 4)


plotshape(divlongREG, title='Long', color=color.teal, style=shape.labelup, location=location.belowbar, text='L', textcolor=color.white, size=size.small)
alertcondition(divlongREG, title='LONG REG', message='REG LONG: Buy long at close price of green candle and set SL below local low.')


if (hist[2]<hist[1] and hist[1]>hist and hist[1]>0)
    for i = 1 to range by 1
        if hist[i]>0 and hist[i+1]<0
            if (A==0)
                A:=i
            for j = 1 to 3 by 1
				if high[j]>highX
					highX:=high[j]
					positionX:=j
				if hist[j]>histX
					histX:=hist[j]
			 
            break
			
    for i = 4 to A+1 by 1
        if hist[i+2] < hist[i+1] and hist[i+1] > hist[i] and hist[i]>histX
			highY:=high[i]
			histY:=hist[i]
			positionY:=i			
		
			for j=i to i+3 by 1
				if hist[j]>histY
					histY:=hist[j]
				if high[j]>highY
					highY:=high[j]
					positionY:=j
    
			if highX>highY and histX<histY
				divshortREG:=1
			break
 
            
//    if divshortREG == 1
//        l = line.new(bar_index[positionX], high[positionX], bar_index[positionY], high[positionY], color=color.red, width = 4)

plotshape(divshortREG, title='short', color=color.red, style=shape.labeldown, location=location.abovebar, text='S', textcolor=color.white, size=size.small)
alertcondition(divshortREG, title='SHORT REG', message='REG SHORT: Buy short at close price of red candle and set SL above local high.')

bgcolor(color=COLOR, transp=50)


